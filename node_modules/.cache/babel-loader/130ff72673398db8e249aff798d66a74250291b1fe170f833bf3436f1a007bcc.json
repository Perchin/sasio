{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prenc\\\\Desktop\\\\samgtu-main\\\\src\\\\components\\\\charts\\\\Chart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Chart from '../assets/apexcharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Charts = () => {\n  _s();\n  const [values, setValues] = useState([[]]);\n  const [names, setNames] = useState([]);\n  useEffect(() => {\n    const getData = async () => {\n      const url = 'http://localhost:8000/test';\n      try {\n        const response = await fetch(url);\n        const data = await response.json();\n        setValues(data.map(item => console.log(item.values)));\n        //console.log(data);\n        setNames(data.map(item => item.name));\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getData();\n  }, []);\n  const series = [];\n  for (let i = 0; i < values.length; i++) {\n    var obj = {};\n    obj[\"name\"] = names[i];\n    obj[\"data\"] = values[i];\n    series.push(obj);\n  }\n  const categories = [1, 2, 3, 4];\n  const options = {\n    chart: {\n      type: 'bar',\n      stacked: true,\n      stackType: '100%'\n    },\n    plotOptions: {\n      bar: {\n        horizontal: true\n      }\n    },\n    title: {\n      text: 'Статистика'\n    },\n    xaxis: {\n      categories: categories\n    },\n    legend: {\n      position: 'top',\n      horizontalAlign: 'left',\n      offsetX: 40\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Chart, {\n      options: options,\n      series: series,\n      type: \"bar\",\n      height: \"220\",\n      width: \"1050\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(Charts, \"C8WVjZs2sf+ieY/ilWUvB6mCTzs=\");\n_c = Charts;\nexport default Charts;\nvar _c;\n$RefreshReg$(_c, \"Charts\");","map":{"version":3,"names":["React","useEffect","useState","Chart","Charts","values","setValues","names","setNames","getData","url","response","fetch","data","json","map","item","console","log","name","error","series","i","length","obj","push","categories","options","chart","type","stacked","stackType","plotOptions","bar","horizontal","title","text","xaxis","legend","position","horizontalAlign","offsetX"],"sources":["C:/Users/prenc/Desktop/samgtu-main/src/components/charts/Chart.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Chart from '../assets/apexcharts';\n\nconst Charts = () => {\n\n  const [values, setValues] = useState([[]]);\n  const [names, setNames] = useState([]);\n\n  useEffect(() => {\n    const getData = async () => {\n      const url = 'http://localhost:8000/test';\n      try {\n        const response = await fetch(url);\n        const data = await response.json();\n        setValues(data.map((item) => console.log(item.values)));\n        //console.log(data);\n        setNames(data.map((item) => item.name));\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getData();\n  }, []);\n\n  \n  const series = [];\n\n  for(let i = 0; i < values.length; i++){\n    var obj = {};\n    obj[\"name\"] = names[i];\n    obj[\"data\"] = values[i];\n    series.push(obj);\n  }  \n  const categories = [1, 2, 3, 4];\n\n  const options = {\n    chart: {\n      type: 'bar',\n      stacked: true,\n      stackType: '100%'\n    },\n    plotOptions: {\n      bar: {\n        horizontal: true,\n      },\n    },\n    title: {\n      text: 'Статистика'\n    },\n    xaxis: {\n      categories: categories,\n    },\n    legend: {\n      position: 'top',\n      horizontalAlign: 'left',\n      offsetX: 40\n    }\n  }\n\n\n  return (\n    <div>\n      <Chart\n        options={options}\n        series={series}\n        type=\"bar\"\n        height = \"220\"\n        width=\"1050\"\n      />\n    </div>\n  );\n\n}\n\n\nexport default Charts;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,sBAAsB;AAAC;AAEzC,MAAMC,MAAM,GAAG,MAAM;EAAA;EAEnB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGJ,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;EAC1C,MAAM,CAACK,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACd,MAAMQ,OAAO,GAAG,YAAY;MAC1B,MAAMC,GAAG,GAAG,4BAA4B;MACxC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,CAAC;QACjC,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;QAClCR,SAAS,CAACO,IAAI,CAACE,GAAG,CAAEC,IAAI,IAAKC,OAAO,CAACC,GAAG,CAACF,IAAI,CAACX,MAAM,CAAC,CAAC,CAAC;QACvD;QACAG,QAAQ,CAACK,IAAI,CAACE,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACG,IAAI,CAAC,CAAC;MACzC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdH,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;MACpB;IACF,CAAC;IACDX,OAAO,EAAE;EACX,CAAC,EAAE,EAAE,CAAC;EAGN,MAAMY,MAAM,GAAG,EAAE;EAEjB,KAAI,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGjB,MAAM,CAACkB,MAAM,EAAED,CAAC,EAAE,EAAC;IACpC,IAAIE,GAAG,GAAG,CAAC,CAAC;IACZA,GAAG,CAAC,MAAM,CAAC,GAAGjB,KAAK,CAACe,CAAC,CAAC;IACtBE,GAAG,CAAC,MAAM,CAAC,GAAGnB,MAAM,CAACiB,CAAC,CAAC;IACvBD,MAAM,CAACI,IAAI,CAACD,GAAG,CAAC;EAClB;EACA,MAAME,UAAU,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAE/B,MAAMC,OAAO,GAAG;IACdC,KAAK,EAAE;MACLC,IAAI,EAAE,KAAK;MACXC,OAAO,EAAE,IAAI;MACbC,SAAS,EAAE;IACb,CAAC;IACDC,WAAW,EAAE;MACXC,GAAG,EAAE;QACHC,UAAU,EAAE;MACd;IACF,CAAC;IACDC,KAAK,EAAE;MACLC,IAAI,EAAE;IACR,CAAC;IACDC,KAAK,EAAE;MACLX,UAAU,EAAEA;IACd,CAAC;IACDY,MAAM,EAAE;MACNC,QAAQ,EAAE,KAAK;MACfC,eAAe,EAAE,MAAM;MACvBC,OAAO,EAAE;IACX;EACF,CAAC;EAGD,oBACE;IAAA,uBACE,QAAC,KAAK;MACJ,OAAO,EAAEd,OAAQ;MACjB,MAAM,EAAEN,MAAO;MACf,IAAI,EAAC,KAAK;MACV,MAAM,EAAG,KAAK;MACd,KAAK,EAAC;IAAM;MAAA;MAAA;MAAA;IAAA;EACZ;IAAA;IAAA;IAAA;EAAA,QACE;AAGV,CAAC;AAAA,GArEKjB,MAAM;AAAA,KAANA,MAAM;AAwEZ,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}